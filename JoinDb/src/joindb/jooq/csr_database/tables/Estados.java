/*
 * This file is generated by jOOQ.
 */
package joindb.jooq.csr_database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import joindb.jooq.csr_database.CsrDatabase;
import joindb.jooq.csr_database.Indexes;
import joindb.jooq.csr_database.Keys;
import joindb.jooq.csr_database.tables.records.EstadosRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.postgis.spatial.binding.PostgisGeometryBinding;
import org.postgis.Geometry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Estados extends TableImpl<EstadosRecord> {

    private static final long serialVersionUID = 390568471;

    /**
     * The reference instance of <code>csr_database.estados</code>
     */
    public static final Estados ESTADOS = new Estados();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EstadosRecord> getRecordType() {
        return EstadosRecord.class;
    }

    /**
     * The column <code>csr_database.estados.id</code>.
     */
    public final TableField<EstadosRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('csr_database.estados_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>csr_database.estados.geom</code>.
     */
    public final TableField<EstadosRecord, Geometry> GEOM = createField("geom", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "", new PostgisGeometryBinding());

    /**
     * The column <code>csr_database.estados.nome</code>.
     */
    public final TableField<EstadosRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>csr_database.estados.sigla</code>.
     */
    public final TableField<EstadosRecord, String> SIGLA = createField("sigla", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>csr_database.estados.geocodigo</code>.
     */
    public final TableField<EstadosRecord, Integer> GEOCODIGO = createField("geocodigo", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>csr_database.estados</code> table reference
     */
    public Estados() {
        this(DSL.name("estados"), null);
    }

    /**
     * Create an aliased <code>csr_database.estados</code> table reference
     */
    public Estados(String alias) {
        this(DSL.name(alias), ESTADOS);
    }

    /**
     * Create an aliased <code>csr_database.estados</code> table reference
     */
    public Estados(Name alias) {
        this(alias, ESTADOS);
    }

    private Estados(Name alias, Table<EstadosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Estados(Name alias, Table<EstadosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Estados(Table<O> child, ForeignKey<O, EstadosRecord> key) {
        super(child, key, ESTADOS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CsrDatabase.CSR_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ESTADOS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EstadosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ESTADOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EstadosRecord> getPrimaryKey() {
        return Keys.ESTADOS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EstadosRecord>> getKeys() {
        return Arrays.<UniqueKey<EstadosRecord>>asList(Keys.ESTADOS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Estados as(String alias) {
        return new Estados(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Estados as(Name alias) {
        return new Estados(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Estados rename(String name) {
        return new Estados(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Estados rename(Name name) {
        return new Estados(name, null);
    }
}
